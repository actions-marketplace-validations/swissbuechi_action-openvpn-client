name: 'Connect OpenVPN'
description: 'A GitHub Action for connecting to an OpenVPN SSL server '
author: 'Raphael BÃ¼chi aka swissbuechi'
inputs:
  dns-server:
    description: 'DNS server to use over the VPN'
    required: true
  host:
    description: 'DNS or IP of OpenVPN server'
    required: true
  username:
    description: 'VPN username'
    required: true
  password:
    description: 'VPN password'
    required: true
  ovpn-config:
    description: 'Path to .ovpn config'
    require: false
    default: '.github/vpn/config.ovpn'
  # test-ping-ip-host:
  #   description: 'Host IP to ping for VPN connection test, DNS names not supported, use test-dns-host instead'
  #   required: false
  # test-dns-host:
  #   description: 'Internal hostname to resolve for VPN connection test'
  #   required: false
  port:
    description: 'Port of OpenVPN server'
    required: false
    default: '443'
  otp-hex:
    description: 'OTP hex string'
    required: false
  otp-timezone:
    description: 'Timezone for OTP'
    required: false
  ca:
    description: 'VPN config CA'
    required: false
  cert:
    description: 'VPN config Cert'
    required: false
  cert-key:
    description: 'VPN config Cert Key'
    required: false
outputs:
  random-number:
    description: "Random number"
    value: ${{ steps.random-number-generator.outputs.random-number }}
runs:
  using: "composite"
  steps:
    - name: Set Timezone
      uses: szenius/set-timezone@v1.1
      with:
        timezoneLinux: ${{ inputs.otp-timezone }}
      if: inputs.otp-timezone != null

#    - name: Install OpenVPN
#      run: |
#        sudo apt update
#        sudo apt --assume-yes --no-install-recommends install openvpn oathtool resolvconf
#      shell: bash
#
#    - name: Setup VPN config
#      run: |
#        echo "${{ inputs.ca }}" > ca.crt
#        echo "${{ inputs.cert }}" > cert.crt
#        echo "${{ inputs.cert-key }}" > cert.key
#        echo "${{ inputs.username }}" > secret.txt
#        echo "${{ inputs.password }}" >> secret.txt
#        sed -i 's/AUTO_REPLACED_HOST/'"${{ inputs.host }}"'/g' ${{ inputs.ovpn-config }}
#        sed -i 's/AUTO_REPLACED_PORT/'"${{ inputs.port }}"'/g' ${{ inputs.ovpn-config }}
#      shell: bash
#
#    - name: Add VPN TOTP
#      if: inputs.otp-hex != null
#      run: |
#        OTP=$(oathtool --totp ${{ inputs.otp-hex }})
#        sed -i '$ s/$/'"$OTP"'/' secret.txt
#      shell: bash

#    - name: Connect VPN
#      run: sudo openvpn --config ${{ inputs.ovpn-config }} --auth-user-pass secret.txt --log "vpn.log" --daemon
#      shell: bash#

    - name: Test Connect VPN
      run: echo "test vpn log content" > vpn.log
      shell: bash

#    - name: Update resolvconf
#      run: |
#        sudo chmod 777 /etc/resolvconf/resolv.conf.d/head
#        sudo echo "nameserver ${{ inputs.dns-server }}" >> /etc/resolvconf/resolv.conf.d/head
#        sudo resolvconf -u
#      shell: bash

#    - name: Wait for a VPN connection
#      run: timeout 60 until dig @${{ inputs.dns-server }} ${{ inputs.dns-server }} A +time=1; do sleep 2; done || exit 1
#      shell: bash

    - name: Show VPN log
      uses: webiny/action-post-run@3.0.0
      with:
        run: sudo cat vpn.log

#    - name: Publish VPN log
#      uses: webiny/action-post-run@3.0.0
#      with:
#        if: always()
#        run: sudo chmod 777 vpn.log

#    - name: Upload VPN logs
#      uses: actions/upload-artifact@v3
#      if: always()
#      with:
#        name: VPN logs
#        path: vpn.log